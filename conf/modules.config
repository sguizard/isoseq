/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args            = Additional arguments appended to command in module.
        ext.args2           = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3           = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix          = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: 'copy',
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: PBCCS {
        publishDir = [
            path: { "${params.outdir}/01_PBCCS" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = " --min-rq ${params.rq}"
    }

    withName: LIMA {
        publishDir = [
            path: { "${params.outdir}/02_LIMA" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = "--isoseq --peek-guess"
        ext.prefix = { "${meta.id}_flnc" }
    }

    withName: ISOSEQ3_REFINE {
        publishDir = [
            path: { "${params.outdir}/03_ISOSEQ3_REFINE" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BAMTOOLS_CONVERT {
        publishDir = [
            path: { "${params.outdir}/04_BAMTOOLS_CONVERT" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = "-format fasta"
    }

    withName: GSTAMA_POLYACLEANUP {
        publishDir = [
            path: { "${params.outdir}/05_GSTAMA_POLYACLEANUP" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.prefix = { "${meta.id}_tama" }
    }

    withName: MINIMAP2_ALIGN {
        publishDir = [
            path: { "${params.outdir}/06_MINIMAP2" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = "-x splice:hq -uf --secondary=no -a"
    }

    withName: ULTRA_PIPELINE {
        publishDir = [
            path: { "${params.outdir}/06_ULTRA" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = "--isoseq --disable_infer"
    }

    withName: PERL_BIOPERL {
        publishDir = [
            path: { "${params.outdir}/07_PERL_BIOPERL" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = '-F\'\\t\' -nae \'print if ($F[5] !~ /N$/)\''
        ext.prefix = { "${meta.id}_filtered.sam" }
    }

    withName: SAMTOOLS_SORT {
        publishDir = [
            path: { "${params.outdir}/08_SAMTOOLS_SORT" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    if (params.capped == true) {
        withName: GSTAMA_COLLAPSE {
            publishDir = [
                path: { "${params.outdir}/09_GSTAMA_COLLAPSE" },
                mode: 'copy',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
            ext.args = "-x capped -b BAM -a ${params.five_prime} -m ${params.splice_junction} -z ${params.three_prime}"
        }
    } else {
        withName: GSTAMA_COLLAPSE {
            publishDir = [
                path: { "${params.outdir}/09_GSTAMA_COLLAPSE" },
                mode: 'copy',
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
            ]
            ext.args = "-x no_cap -b BAM -a ${params.five_prime} -m ${params.splice_junction} -z ${params.three_prime}"
        }
    }

    withName: GSTAMA_FILELIST {
        publishDir = [
            path: { "${params.outdir}/10_GSTAMA_FILELIST" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: GSTAMA_MERGE {
        publishDir = [
            path: { "${params.outdir}/11_GSTAMA_MERGE" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
        ext.args = "-a ${params.five_prime} -m ${params.splice_junction} -z ${params.three_prime}"
    }

}
